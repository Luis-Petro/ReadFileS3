[{"line":1,"elements":[{"line":2,"name":"","description":"","type":"background","keyword":"Background","steps":[{"name":"def urlbase = \"https:\/\/s3.console.aws.amazon.com\/s3\/buckets?region=us-east-1\"","result":{"duration":5256800,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":3},{"name":"def fileName = \"PruebaUno.log\"","result":{"duration":3672500,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":4},{"name":"def bucket = \"pruebas-aws-s\"","result":{"duration":1729500,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":5},{"name":"def aws = Java.type('AWS.AwsConnect')","result":{"duration":17345400,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6}]},{"start_timestamp":"2022-09-21T19:02:35.813Z","line":9,"name":"I want to list the files","description":"","id":"i-want-to-list-the-files","type":"scenario","keyword":"Scenario","steps":[{"name":"configure ssl = true","result":{"duration":8790100,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10},{"name":"def bol = aws.checkIfFileExists(bucket, fileName)","result":{"duration":2442388600,"error_message":"js failed:\n>>>>\n01: aws.checkIfFileExists(bucket, fileName)\n<<<<\norg.graalvm.polyglot.PolyglotException: com.amazonaws.services.s3.model.AmazonS3Exception: Forbidden (Service: Amazon S3; Status Code: 403; Error Code: 403 Forbidden; Request ID: XVEPD5HXQAW4D2ZR; S3 Extended Request ID: chSjoNYBzCFY7DC8MpSnjDoSFflo+pR\/VULFSU+hYDr3spIihlFlbe+woCIuYJ\/wA7U0EDHdxrQ=), S3 Extended Request ID: chSjoNYBzCFY7DC8MpSnjDoSFflo+pR\/VULFSU+hYDr3spIihlFlbe+woCIuYJ\/wA7U0EDHdxrQ=\n- AWS.AwsConnect.doesItExists(AwsConnect.java:50)\n- AWS.AwsConnect.checkIfFileExists(AwsConnect.java:37)\n- <js>.:program(Unnamed:1)\n\nclasspath:features\/s3.feature:11","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":11,"doc_string":{"content_type":"","value":"14:02:40.629 classpath:features\/s3.feature:11\nGiven def bol = aws.checkIfFileExists(bucket, fileName)\njs failed:\n>>>>\n01: aws.checkIfFileExists(bucket, fileName)\n<<<<\norg.graalvm.polyglot.PolyglotException: com.amazonaws.services.s3.model.AmazonS3Exception: Forbidden (Service: Amazon S3; Status Code: 403; Error Code: 403 Forbidden; Request ID: XVEPD5HXQAW4D2ZR; S3 Extended Request ID: chSjoNYBzCFY7DC8MpSnjDoSFflo+pR\/VULFSU+hYDr3spIihlFlbe+woCIuYJ\/wA7U0EDHdxrQ=), S3 Extended Request ID: chSjoNYBzCFY7DC8MpSnjDoSFflo+pR\/VULFSU+hYDr3spIihlFlbe+woCIuYJ\/wA7U0EDHdxrQ=\n- AWS.AwsConnect.doesItExists(AwsConnect.java:50)\n- AWS.AwsConnect.checkIfFileExists(AwsConnect.java:37)\n- <js>.:program(Unnamed:1)\n\nclasspath:features\/s3.feature:11\n","line":11}},{"name":"print bol","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":12},{"name":"match bol == true","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":13}],"tags":[{"name":"@IfExist","line":8}]},{"line":2,"name":"","description":"","type":"background","keyword":"Background","steps":[{"name":"def urlbase = \"https:\/\/s3.console.aws.amazon.com\/s3\/buckets?region=us-east-1\"","result":{"duration":3529800,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":3},{"name":"def fileName = \"PruebaUno.log\"","result":{"duration":1955300,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":4},{"name":"def bucket = \"pruebas-aws-s\"","result":{"duration":2185700,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":5},{"name":"def aws = Java.type('AWS.AwsConnect')","result":{"duration":23789500,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6}]},{"start_timestamp":"2022-09-21T19:02:35.813Z","line":16,"name":"I want to list all files","description":"","id":"i-want-to-list-all-files","type":"scenario","keyword":"Scenario","steps":[{"name":"def bol = aws.filesInS3(bucket)","result":{"duration":2451781800,"error_message":"js failed:\n>>>>\n01: aws.filesInS3(bucket)\n<<<<\norg.graalvm.polyglot.PolyglotException: The AWS Access Key Id you provided does not exist in our records. (Service: Amazon S3; Status Code: 403; Error Code: InvalidAccessKeyId; Request ID: XVEW56SSDXQV3R5T; S3 Extended Request ID: IvH18U5a8ekr\/VyI+E+utpgJaFB2EqS\/bAuIpUFgBbEF17cpkS8\/koT90gVrvKoGmU+5YDwtSdg=)\n- com.amazonaws.http.AmazonHttpClient$RequestExecutor.handleErrorResponse(AmazonHttpClient.java:1862)\n- com.amazonaws.http.AmazonHttpClient$RequestExecutor.handleServiceErrorResponse(AmazonHttpClient.java:1415)\n- com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeOneRequest(AmazonHttpClient.java:1384)\n- com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeHelper(AmazonHttpClient.java:1154)\n- com.amazonaws.http.AmazonHttpClient$RequestExecutor.doExecute(AmazonHttpClient.java:811)\n- com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeWithTimer(AmazonHttpClient.java:779)\n- com.amazonaws.http.AmazonHttpClient$RequestExecutor.execute(AmazonHttpClient.java:753)\n\nclasspath:features\/s3.feature:17","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":17,"doc_string":{"content_type":"","value":"14:02:40.629 classpath:features\/s3.feature:17\nGiven def bol = aws.filesInS3(bucket)\njs failed:\n>>>>\n01: aws.filesInS3(bucket)\n<<<<\norg.graalvm.polyglot.PolyglotException: The AWS Access Key Id you provided does not exist in our records. (Service: Amazon S3; Status Code: 403; Error Code: InvalidAccessKeyId; Request ID: XVEW56SSDXQV3R5T; S3 Extended Request ID: IvH18U5a8ekr\/VyI+E+utpgJaFB2EqS\/bAuIpUFgBbEF17cpkS8\/koT90gVrvKoGmU+5YDwtSdg=)\n- com.amazonaws.http.AmazonHttpClient$RequestExecutor.handleErrorResponse(AmazonHttpClient.java:1862)\n- com.amazonaws.http.AmazonHttpClient$RequestExecutor.handleServiceErrorResponse(AmazonHttpClient.java:1415)\n- com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeOneRequest(AmazonHttpClient.java:1384)\n- com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeHelper(AmazonHttpClient.java:1154)\n- com.amazonaws.http.AmazonHttpClient$RequestExecutor.doExecute(AmazonHttpClient.java:811)\n- com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeWithTimer(AmazonHttpClient.java:779)\n- com.amazonaws.http.AmazonHttpClient$RequestExecutor.execute(AmazonHttpClient.java:753)\n\nclasspath:features\/s3.feature:17\n","line":17}},{"name":"print bol","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":18},{"name":"match bol contains fileName","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":19}],"tags":[{"name":"@ListS3","line":15}]},{"line":2,"name":"","description":"","type":"background","keyword":"Background","steps":[{"name":"def urlbase = \"https:\/\/s3.console.aws.amazon.com\/s3\/buckets?region=us-east-1\"","result":{"duration":3832900,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":3},{"name":"def fileName = \"PruebaUno.log\"","result":{"duration":1963200,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":4},{"name":"def bucket = \"pruebas-aws-s\"","result":{"duration":1783800,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":5},{"name":"def aws = Java.type('AWS.AwsConnect')","result":{"duration":24922900,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6}]},{"start_timestamp":"2022-09-21T19:02:35.811Z","line":22,"name":"I want to list get a file","description":"","id":"i-want-to-list-get-a-file","type":"scenario","keyword":"Scenario","steps":[{"name":"def bol = aws.downloadFileS3(bucket,fileName)","result":{"duration":2451434700,"error_message":"js failed:\n>>>>\n01: aws.downloadFileS3(bucket,fileName)\n<<<<\norg.graalvm.polyglot.PolyglotException: The AWS Access Key Id you provided does not exist in our records. (Service: Amazon S3; Status Code: 403; Error Code: InvalidAccessKeyId; Request ID: XVEKV8HC9DDGR8KT; S3 Extended Request ID: ifMDWCIaBjwkyH7TU03znL4TpPTQclZ3orf\/qwy\/WiLSjgL9mgbWEOY0q+gMgavv2RHdDKczEzM=)\n- com.amazonaws.http.AmazonHttpClient$RequestExecutor.handleErrorResponse(AmazonHttpClient.java:1862)\n- com.amazonaws.http.AmazonHttpClient$RequestExecutor.handleServiceErrorResponse(AmazonHttpClient.java:1415)\n- com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeOneRequest(AmazonHttpClient.java:1384)\n- com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeHelper(AmazonHttpClient.java:1154)\n- com.amazonaws.http.AmazonHttpClient$RequestExecutor.doExecute(AmazonHttpClient.java:811)\n- com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeWithTimer(AmazonHttpClient.java:779)\n- com.amazonaws.http.AmazonHttpClient$RequestExecutor.execute(AmazonHttpClient.java:753)\n\nclasspath:features\/s3.feature:23","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":23,"doc_string":{"content_type":"","value":"14:02:40.629 classpath:features\/s3.feature:23\nGiven def bol = aws.downloadFileS3(bucket,fileName)\njs failed:\n>>>>\n01: aws.downloadFileS3(bucket,fileName)\n<<<<\norg.graalvm.polyglot.PolyglotException: The AWS Access Key Id you provided does not exist in our records. (Service: Amazon S3; Status Code: 403; Error Code: InvalidAccessKeyId; Request ID: XVEKV8HC9DDGR8KT; S3 Extended Request ID: ifMDWCIaBjwkyH7TU03znL4TpPTQclZ3orf\/qwy\/WiLSjgL9mgbWEOY0q+gMgavv2RHdDKczEzM=)\n- com.amazonaws.http.AmazonHttpClient$RequestExecutor.handleErrorResponse(AmazonHttpClient.java:1862)\n- com.amazonaws.http.AmazonHttpClient$RequestExecutor.handleServiceErrorResponse(AmazonHttpClient.java:1415)\n- com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeOneRequest(AmazonHttpClient.java:1384)\n- com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeHelper(AmazonHttpClient.java:1154)\n- com.amazonaws.http.AmazonHttpClient$RequestExecutor.doExecute(AmazonHttpClient.java:811)\n- com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeWithTimer(AmazonHttpClient.java:779)\n- com.amazonaws.http.AmazonHttpClient$RequestExecutor.execute(AmazonHttpClient.java:753)\n\nclasspath:features\/s3.feature:23\n","line":23}},{"name":"print bol","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":24},{"name":"match bol contains fileName","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":25}],"tags":[{"name":"@DownloadFileS3","line":21}]}],"name":"features\/s3.feature","description":"get the log","id":"get-the-log","keyword":"Feature","uri":"features\/s3.feature"}]